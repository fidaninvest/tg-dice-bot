


from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import asyncio
import random
import os
from dotenv import load_dotenv

load_dotenv()
TOKEN = "7716257236:AAHUSNHr2YZhydBRjN5AGFovoQVlTTnE_48"

bot = Bot(token=TOKEN)
dp = Dispatcher()

DICE_NUMS = {
    1: "1Ô∏è‚É£",
    2: "2Ô∏è‚É£",
    3: "3Ô∏è‚É£",
    4: "4Ô∏è‚É£",
    5: "5Ô∏è‚É£",
    6: "6Ô∏è‚É£"
}

inline_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üé≤ –ë—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏", callback_data="roll")]
])

@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –±—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏!", reply_markup=inline_kb)

@dp.callback_query(F.data == "roll")
async def roll_callback(callback: types.CallbackQuery):
    d1 = random.randint(1, 6)
    d2 = random.randint(1, 6)
    total = d1 + d2

    if d1 == d2:
        score = (d1 + d2) * 2  # —É–¥–≤–æ–µ–Ω–∏–µ –æ—á–∫–æ–≤
        text = (
            f"üéØ <b>–ö–∏–¥–∞–µ–º –∫–æ—Å—Ç–∏!</b>\n\n"
            f"üî• –í—ã–ø–∞–ª <b>–ö–£–®</b>! –î—É–±–ª—å: {DICE_NUMS[d1]} + {DICE_NUMS[d2]}\n"
            f"üü¢ –û—á–∫–∏ —É–¥–≤–∞–∏–≤–∞—é—Ç—Å—è!\n"
            f"üéâ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç: {score}</b> üéâ"
        )
    else:
        score = total
        text = (
            f"üéØ <b>–ö–∏–¥–∞–µ–º –∫–æ—Å—Ç–∏!</b>\n\n"
            f"üü¢ –ü–µ—Ä–≤–∞—è: {DICE_NUMS[d1]}\n"
            f"üîµ –í—Ç–æ—Ä–∞—è: {DICE_NUMS[d2]}\n\n"
            f"üéâ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç: {score}</b> üéâ"
        )
    await callback.message.answer(text, reply_markup=inline_kb, parse_mode="HTML")
    await callback.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
